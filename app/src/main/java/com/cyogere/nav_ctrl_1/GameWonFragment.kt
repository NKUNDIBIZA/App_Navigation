package com.cyogere.nav_ctrl_1


import android.os.Bundle
import androidx.fragment.app.Fragment
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.TextView
import android.widget.Toast
import androidx.databinding.DataBindingUtil
import androidx.navigation.findNavController
import androidx.navigation.fragment.navArgs
import com.cyogere.nav_ctrl_1.databinding.FragmentGameWonBinding

class GameWonFragment : Fragment() {

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {

        val binding: FragmentGameWonBinding = DataBindingUtil.inflate(inflater, R.layout.fragment_game_won, container, false)
        binding.startButton.setOnClickListener {v: View ->

            //v.findNavController().navigate(R.id.action_gameWonFragment_to_gameFragment) // action without safeArgs gradle lib
            v.findNavController().navigate(GameWonFragmentDirections.actionGameWonFragmentToGameFragment())
        }

//################################################################################################################################################
        // The trainer suggested that we use the following way
        // var args = GameWonFragmentsArgs.fromBundle(arguments)  // these were all generated by the graddle files
        //Get bundles
       val args = arguments?.let { GameWonFragmentArgs.fromBundle(it) }  // you can use val or var

        args?.let {
            Toast.makeText(context,
                "NumCorrect: ${args.numCorrect},NumQuestions: ${args.numQuestions}",
                Toast.LENGTH_LONG).show()
        }

          // OR
        /*arguments?.let {
            var args = GameWonFragmentArgs.fromBundle(it)
            Toast.makeText(context,
                "NumCorrect: ${args.numCorrect},NumQuestions: ${args.numQuestions}",
                Toast.LENGTH_LONG).show()
        }*/
//#################################################################################################################################################

        return binding.root
        }
    }
